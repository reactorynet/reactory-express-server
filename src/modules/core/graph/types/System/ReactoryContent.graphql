"""
A Reactory Content component
"""
type ReactoryContent {
  id: ObjID
  slug: String!
  topics: [ String ]
  title: String!
  content: String!
  description: String
  helpTopic: String
  template: Boolean
  engine: String
  previewInputForm: String  
  createdAt: Date
  updatedAt: Date
  createdBy: User!
  updatedBy: User!
  published: Boolean
  releaseDate: Date
  version: String
  publishedVersion: String
  comments: [ Comment ]
}

type ReactorySaveImageDataResponse {  
  success: Boolean
  pngURL: String
  svgURL: String
}

extend type Query {
  ReactoryGetContentBySlug(slug: String!): ReactoryContent
  ReactoryGetContentByTags(tags: [String]!): [ ReactoryContent ]
  ReactoryGetContentById(id: String!): [ ReactoryContent ]
  ReactoryGetContentList: [ ReactoryContent ]
}

input CreateContentInput {
  slug: String!
  topics: [ String ]
  title: String!
  content: String!
  locale: String
  description: String
  template: Boolean
  engine: String
  previewInputForm: String
  createdAt: Date
  updatedAt: Date
  publisDate: Date
  createdBy: ObjID
  updatedBy: ObjID
  published: Boolean
}

input ReactoryContentInput {
  id: String
  slug: String!
  topics: [ String ]
  title: String!
  description: String
  content: String!
  lcoale: String
  template: Boolean
  engine: String
  previewInputForm: String
  version: String
  createdAt: Date
  updatedAt: Date
  publisheDate: Date
  createdBy: ObjID
  updatedBy: ObjID
  published: Boolean
}

extend type Mutation {
  ReactoryCreateContent(createInput: CreateContentInput!): ReactoryContent
  ReactorySaveContent(reactoryInput: ReactoryContentInput!): ReactoryContent
  ReactorySaveImageData(folder: String, filename: String, svg: String, png: String, width: Int, height: Int): ReactorySaveImageDataResponse
}
