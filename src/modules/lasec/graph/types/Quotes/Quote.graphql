type LasecCompany {
  id: String
  tradingName: String
}

type LasecCustomer {
  id: String
  fullName: String
}

type LasecQuoteItem {
  id: ObjID
  quote_item_id: String
  code: String
  title: String
  productClass: String
  productClassDescription: String
  quantity: Float
  price: Float
  discount: Float
  subtotal: Float
  totalVATExclusive: Float
  totalVATInclusive: Float
  VATRate: Float
  GP: Float
  header: LasecQuoteHeader
  note: String
  content: Any
}

type LasecQuoteHeader {
  id: ObjID
  headerId: String
  text: String
  quoteItems: [LasecQuoteItem]
}

type QuoteReminder {
  id: ObjID
  quote: Quote
  who: [User]
  next: Date
  actionType: String
  actioned: Boolean
  result: Any
  via: [String]
  text: String
  importance: String
  meta: Any
}

type QuoteTimeLine {
  id: ObjID
  what: String
  when: Date
  actionType: String
  who: User
  notes: String
  reminder: QuoteReminder
}

type QuoteTotals {
  totalVATExclusive: Float
  totalVAT: Float
  totalVATInclusive: Float
  totalDiscount: Float
  totalDiscountPercent: Float
  GP: Float
  actualGP: Float
}

type Quote {
  id: String
  code: String
  statusGroup: String
  statusGroupName: String
  status: String
  statusName: String
  salesRep: User
  salesTeam: Team
  allowedStatus: [String]
  customer: User
  company: Organization
  totals: QuoteTotals
  totalVATExclusive: Float
  totalVAT: Float
  totalVATInclusive: Float
  GP: Float
  actualGP: Float
  created: Date
  modified: Date
  expirationDate: Date
  note: String
  headers: [LasecQuoteHeader]
  lineItems: [LasecQuoteItem]
  timeline: [QuoteTimeLine]
  lastAction: QuoteTimeLine
  meta: Any
  productClass: String
  repCode: String
  quoteType: String
}

type LasecQuoteDashboardSummary {
  key: String
  title: String
  good: Int
  naughty: Int
  category: String
  quotes: [Quote]
}

enum LasecChartType {
  FUNNEL
  PIE
  AREA
  LINE
  RADAR
  RADIAL
  SCATTER
  TREEMAP
  COMPOSED
}

type LasecChart {
  chartType: LasecChartType
  data: Any
  options: Any
  key: String
}

type DateRange {
  startDate: Date
  endDate: Date
}

type LasecNextActionFilter {
  dateRange: DateRange
  actioned: Boolean
  actionType: String
}

type LasecUserNextActions {
  owner: User
  filter: LasecNextActionFilter
  actions: [QuoteReminder]
}

type LaseDashboardUserNextActions {
  owner: User
  filter: LasecNextActionFilter
  actions: [QuoteReminder]
}

type LasecQuoteDashboardCharts {
  quoteStatusFunnel: LasecChart
  quoteStatusPie: LasecChart
  quoteINVPie: LasecChart
  quoteISOPie: LasecChart
  quoteStatusComposed: LasecChart
}

type LasecProductDashboardCharts {
  quoteProductFunnel: LasecChart
  quoteProductPie: LasecChart
  quoteINVPie: LasecChart
  quoteISOPie: LasecChart
  quoteStatusComposed: LasecChart
}

type LasecQuoteDashboard {
  id: String
  period: String
  periodLabel: String
  periodStart: Date
  periodEnd: Date
  repIds: [String]
  agentSelection: String
  teamIds: [String]
  target: Float
  targetPercent: Float
  totalQuotes: Int
  totalBad: Int
  statusSummary: [LasecQuoteDashboardSummary]
  quotes: [Quote]
  nextActions: LasecUserNextActions
  charts: LasecQuoteDashboardCharts
}

type LasecProductDashboard {
  id: String
  period: String
  periodLabel: String
  periodStart: Date
  periodEnd: Date
  repIds: [String]
  agentSelection: String
  teamIds: [String]
  target: Float
  targetPercent: Float
  totalQuotes: Int
  totalBad: Int
  productSummary: [LasecQuoteDashboardSummary]
  quotes: [Quote]
  nextActions: LasecUserNextActions
  charts: LasecProductDashboardCharts
}

type LasecQuoteStatus {
  id: String
  status: String
  customer: LasecCustomer
  timeline: [QuoteTimeLine]
}

input LasecQuoteStatusUpdate {
  nextAction: String
  reason: String
  reminder: Int
  note: String
}

type LasecQuoteStatusUpdateResult {
  quote: Quote
  success: Boolean
  message: String
}

input LasecQuoteQueryInput {
  period: String
  periodStart: Date
  periodEnd: Date
  agentSelection: String
  repIds: [String]
  teamIds: [String]
  status: [String]
  productClass: [String]
  options: Any
}

enum QuoteFilterType {
  Recent
  ByClient
  ByStatus
}

input LasecFilteredQuoteQueryInput {
  filterType: QuoteFilterType
}

enum QuoteHeaderAction {
  NEW
  ADD_ITEM
  REMOVE_ITEM
  REMOVE_HEADER
}

input LasecQuoteHeaderInput {
  quote_header_id: String
  quote_item_id: String
  header_text: String
  action: QuoteHeaderAction!
}

type LasecCustomerEnquiry {
  id: String
}

type OutlookSyncResponse {
  success: String
  message: String
}

type SimpleResponse {
  success: String
  message: String
}

type PagedCRMQuote {
  search: String
  filterBy: String
  paging: PagingResult
  quotes: [Quote]
}

type SalesOrder {
  id: String
  orderDate: String
  orderType: String
  shippingDate: String
  iso: Int
  customer: String
  client: String
  poNumber: Int
  value: Int
}

type PagedCRMSalesOrders {
  paging: PagingResult
  salesOrders: [SalesOrder]
}

extend type Query {
  LasecGetQuoteList(search: String): [Quote]
  LasecGetCRMQuoteList(
    search: String!
    paging: PagingRequest
    filterBy: String,
    periodStart: String,
    periodEnd: String,
    quoteDate: String,
    iter: Int
  ): PagedCRMQuote
  LasecGetDashboard(dashparams: LasecQuoteQueryInput): LasecQuoteDashboard
  LasecGetProductDashboard(
    dashparams: LasecQuoteQueryInput
  ): LasecProductDashboard
  LasecGetQuoteById(quote_id: String!): Quote
  LasecGetFilteredQuotes(filterparams: LasecFilteredQuoteQueryInput): [Quote]
  LasecGetCRMSalesOrders(productId: String, paging: PagingRequest): PagedCRMSalesOrders
}

extend type Mutation {
  LasecSetQuoteHeader(
    quote_id: String!
    input: LasecQuoteHeaderInput
  ): LasecQuoteHeader
  LasecUpdateQuoteStatus(
    quote_id: String!
    input: LasecQuoteStatusUpdate
  ): LasecQuoteStatusUpdateResult
  LasecCreateClientEnquiry(customerId: String!): LasecCustomerEnquiry
  SynchronizeNextActionsToOutloook(nextActions: Any!): OutlookSyncResponse
  LasecMarkNextActionAsActioned(id: String!): SimpleResponse
  LasecSendQuoteEmail(
    code: String!
    email: String!
    subject: String!
    message: String!
  ): SimpleResponse
}
