type LasecCRMCustomer {
  id: String
  registeredName: String
  tradingName: String
  accountNumber: String
  customerStatus: String
  accountType: String
  country: String
  customerClass: String
  description: String
  ranking: String
  availableBalance: Float
  salesTeam: String
  physicalAddressId: Int
  physicalAddress: String
  deliveryAddressId: Int
  deliveryAddress: String
  billingAddressId: Int
  billingAddress: String
  currencyCode: String
  currencySymbol: String
  currencyDisplay: String
  registrationNumber: String
  taxNumber: String
  creditLimit: Float
  currentBalance: Float
  currentInvoice: Float
  balance30Days: Float
  balance60Days: Float
  balance90Days: Float
  balance120Days: Float
  creditTotal: Float
  documents: [LasecDocument]
}

type LasecCRMOrganisation {
  id: String
  name: String
  description: String
}

type LasecCRMClient {
  id: String
  clientStatus: String
  emailAddress: String
  alternateEmail: String
  accountType: String
  customer: LasecCRMCustomer
  fullName: String
  firstName: String
  lastName: String
  department: String
  jobTitle: String
  country: String
  salesTeam: String
  mobileNumber: String
  officeNumber: String
  alternateOfficeNumber: String
  availableBalance: Float
  creditLimit: Float
}

type LasecDocument {
  id: String
  name: String
  url: String
  mimetype: String
}

type PagedCRMClient {
  search: String
  filterBy: String
  paging: PagingResult
  clients: [LasecCRMClient]
}

type PagedCRMCustomer {
  search: String
  filterBy: String
  paging: PagingResult
  customers: [LasecCRMCustomer]
}

type PagedCRMOrganisation {
  search: String
  filterBy: String
  paging: PagingResult
  organisations: [LasecCRMOrganisation]
}

type ClientDetailUpdateResponse {
  Success: Boolean
}

type LasecLookupItem {
  id: String
  name: String
  description: String
}

type LasecTitleLookupItem {
  id: String
  title: String
  long_title: String
}

type CreateNewOrganisationResponse {
  id: Int
  success: Boolean
}

input ClientUpdateInput {
  clientId: String!
  clientStatus: String
  firstName: String
  lastName: String
  country: String
  mobileNumber: String
  officeNumber: String
  alternateOfficeNumber: String
  email: String
  alternateEmail: String
  accountType: String
  repCode: String
  jobTitle: String
  clientDepartment: String
  clientClass: String
  ranking: String
}

extend type Query {
  LasecGetClientList(
    search: String!
    paging: PagingRequest
    filterBy: String
    iter: Int
    filter: String
  ): PagedCRMClient
  LasecGetClientDetail(id: String!): LasecCRMClient
  LasecGetCustomerList(
    search: String!
    paging: PagingRequest
    filterBy: String
    iter: Int
  ): PagedCRMCustomer
  LasecGetCustomerDetail(id: String!): LasecCRMCustomer
  LasecGetCustomerClass: [LasecLookupItem]
  LasecGetCustomerRanking: [LasecLookupItem]
  LasecGetCustomerRoles: [LasecLookupItem]
  LasecGetCustomerCountries: [LasecLookupItem]
  LasecGetCustomerRepCodes: [LasecLookupItem]
  LasecGetCustomerFilterLookup(filterBy: String): [LasecLookupItem]
  LasecGetCustomerDocuments(id: String!): [LasecDocument]
  LasecGetPersonTitles: [LasecTitleLookupItem]
  LasecGetOrganisationList(
    search: String!
    paging: PagingRequest
    filterBy: String
    iter: Int
  ): PagedCRMOrganisation
}

input AddressFields {
  unitNumber: String,
  unitName: String,
  streetNumber: String,
  streetName: String,
  suburb: String,
  metro: String,
  city: String,
  postCode: String,
  province: String,
  country: String,
}

type NewAddressResponse {
  success: Boolean
  id: String
}

extend type Mutation {
  LasecUpdateClientDetails(
    clientInfo: ClientUpdateInput!
  ): ClientDetailUpdateResponse
  LasecUploadCustomerDocument(id: String, file: Upload!): LasecDocument
  LasecUploadDocument(file: Upload!): LasecDocument
  LasecCreateNewOrganisation(
    customerId: String
    name: String
    description: String
  ): CreateNewOrganisationResponse
  LasecCreateNewAddress(
    buildingDescriptionId: String
    buildingFloorNumberId: String
    unit: String
    addressFields: AddressFields
  ): NewAddressResponse
}
