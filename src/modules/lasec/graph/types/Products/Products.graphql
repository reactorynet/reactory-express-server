type Product {
  id: String
  name: String
  code: String
  description: String
  qtyAvailable: Int
  qtyOnHand: Int
  qtyOnOrder: Int
  unitOfMeasure: String
  price: Int
  priceAdditionalInfo: String
  image: String
  onSyspro: String
  landedPrice: Int
  wh10CostPrice: Int
  threeMonthAvePrice: Int
  listPrice: Int
  buyer: String
  planner: String
  isHazardous: String
  siteEvaluationRequired: String
  packedLength: Float
  packedWidth: Float
  packedHeight: Float
  packedVolume: Float
  packedWeight: Float
  numberOfSalesOrders: Int
}

type ProductQueryDetail {
  id: String
  productName: String
  productDescription: String
  productCode: String
  from: String
  buyer: String
  buyerEmail: String
  subject: String
  message: String
}

type ProductClass {
  id: String
  name: String
}

type WarehouseStockDetails {
  stock: [WarehouseStock]
  totals: StockTotals
}

type WarehouseStock {
  name: String
  qtyAvailable: Int
  qtyOnHand: Int
  qtyOnBO: Int
}

type StockTotals {
  qtyAvailable: Int
  qtyOnHand: Int
  qtyOnBO: Int
}

extend type Query {
  LasecGetProductList(product: String): [Product]
  LasecGetProductById: [Product]
  LasecGetProductQueryDetail(productId: String!): ProductQueryDetail
  LasecGetProductClassList: [ProductClass]
  LasecGetWarehouseStockLevels: WarehouseStockDetails
}
extend type Mutation {
  LasecSendProductQuery(
    buyerEmail: String!
    subject: String!
    message: String!
  ): SimpleResponse
}
